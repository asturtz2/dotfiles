bindkey -v

function search(){
    aura -Ss $1 || aura -As $1
}

function upgrade(){
    backup-packages
    sudo aura -Syu
    sudo aura -Akyuax
    sudo aura -Oj
}


function backup-packages(){
    # Copy list of installed packages for reinstallation
    echo 'Copying list of installed packages.'
    aura -Qqen > ~/dotfiles/arch/arch-pkgs.txt \
        && echo 'Arch package list saved.'
    aura -Qqem > ~/dotfiles/arch/aur-pkgs.txt \
        && echo 'Aur package list saved.'

    #Backup installed packages for downgrade
    echo 'Backing up installed packages'
    sudo aura -B \
        && echo 'Packages successfully backed up'
}

# Commit all tracked dotfiles to github repo.
# GNU Stow required to symlink dotfiles to correct directories
function backup-dotfiles(){
    echo 'Backing up dotfiles.'
    git status -s
    echo 'Modified files in this list will be committed. What would you like to do?'
    echo "c) Continue x) Execute command q) Quit"
    read option;
    case $option in
        c) git -C ~/dotfiles commit -qam "Backup commit" \
            && git -C ~/dotfiles push -q \
            && echo 'Dotfiles successfully backed up.';;
        x) read input; $(input);;
        q) echo 'Exiting.';;
    esac
}

# Back up specific home directory data to Dropbox.
function backup-data(){
    source rclone-prompt
    echo 'Backing up user data.'
    rclone --ask-password=false sync --stats=1m ~/school dropbox:school
    rclone --ask-password=false  sync --stats=1m ~/documents dropbox:documents
    echo 'User data successfully backed up.'
    unset RCLONE_CONFIG_PASS
}

function backup-all(){
    echo 'Starting full backup.'
    if backup-packages && backup-dotfiles && backup-data; then
        echo 'All backups successful.'
    else
        echo 'One or more backups failed.'
    fi
}

function pac(){
    sudo aura -S $1 || sudo aura -Ax $1
}

function pacgit(){
    sudo aura -S --devel $1 || sudo aura -Ax --devel $1
}

function pacusage(){
    expac -H M '%m\t%n' | sort -rh | grep '^[2-9][0-9]'
}
